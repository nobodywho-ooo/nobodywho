name: "Release"
on:
  workflow_call:

jobs:
  godot-distributable:
    runs-on: ubuntu-24.04
    steps:
        - uses: actions/checkout@v4
  
        - name: "Download all build artifacts"
          uses: actions/download-artifact@v4
          with:
            path: ./artifacts
  
        - name: "Make directory structure for release zip"
          run: |
            mkdir -p nobodywho-release/bin/addons/nobodywho
            # copy in nobodywho libs
            cp ./artifacts/*/*nobodywho-godot* ./nobodywho-release/bin/addons/nobodywho/
            # copy in gdextension metadata
            cp ./nobodywho/godot/nobodywho.gdextension ./nobodywho-release/bin/addons/nobodywho/
            cp ./assets/icon.svg ./nobodywho-release/bin/addons/nobodywho/
        - name: "Upload zipped godot build artifacts"
          uses: actions/upload-artifact@v4
          with:
            name: nobodywho-godot-all-platforms
            path: ./nobodywho-release

  unity-distributable:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Create Unity package output directory
        run: mkdir -p ./nobodywho-release/


      # TODO: download all of them and place them correctly.
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: nobodywho-unity-x86_64-unknown-linux-gnu-debug
          path: ./nobodywho/unity/src/Runtime/
      
      # Bit hacky here - we need the meta files for the packager to bundle the files correctly.
      - name: Generate .meta files for native libraries
        run: |
          for lib in $(find unity/src/Runtime/ -type f -name "*.so" -o -name "*.dylib" -o -name "*.dll"); do
            echo "Generating .meta file for ${lib}"
            echo "fileFormatVersion: 2" > "${lib}.meta"
            echo "guid: 2bf588bf6cbbf0ff3a9650fbc11af17a" >> "${lib}.meta"
          done
        working-directory: nobodywho

      - name: Create Unity Package
        uses: natsuneko-laboratory/create-unitypackage@v3
        with:
          root: nobodywho/unity/src
          package.json: nobodywho/unity/src/package.json
          files-glob: "**/*.{cs,meta,dll,dylib,so,asmdef}"
          dest: nobodywho-release/nobodywho.unitypackage

      - name: Upload Unity Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nobodywho-unity-package
          path: ./nobodywho-release/nobodywho.unitypackage
      
      - name: Open sshx if earlier step failed
        if: failure()           # guard so it runs only on red builds
        run: |
          curl -sSf https://sshx.io/get | sh -s run
          # script prints a https://sshx.io/s/â€¦ URL and blocks
        working-directory: nobodywho

  create-github-release:
    needs: [godot-distributable, unity-distributable]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04
    steps:
      - name: "Download build artifacts"
        uses: actions/download-artifact@v4
        with:
          name: nobodywho-godot-all-platforms
          path: ./nobodywho-release

      - name: "Make zip file"
        working-directory: ./nobodywho-release
        run: zip -r "../nobodywho-godot-${{ github.ref_name }}.zip" ./**

      - name: "Create GitHub Release"
        uses: softprops/action-gh-release@v1
        with:
          files: "./nobodywho-godot-${{ github.ref_name }}.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
